/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace org.example.empty

abstract participant User identified by username {
 	o String username
    o Double balance
}
participant Verifier extends User {
  o Double reputation
}

participant EndUser extends User {

}

participant ServiceProvider extends User {

}

//Onchain verified data
asset Credential identified by id {
  	o String id
 	  o Boolean valid
    --> Verifier verifier
    o String dataHash
    o Double price
}

//Offchain data sent to verifier
asset UnverifiedCredential identified by credId{
  o String credId
	o String dataURL
  o String verifier
}

//Offchain user data for service provider
asset VerifiedUser identified by username {
  o String username
  o String definition 
  o String ownedServiceProvider
}

//Send data offchain to verifier
transaction SendDataToVerifier{
 	o String dataURL
  o String verifier
}

//Validate or deny data. List of a set price
transaction VerifierValidate {
	o Boolean verified
  o String credId
  o Double price
}

//Checks offchain recieved user data with hashes on blockchain for match
transaction ServiceProviderVerify {
    o String username
   	o String data
    o String description
    o String minimumReputation
}

//Allows verifiers to upload large amounts of validated data
transaction uploadVerifiedData {
  o String[] data
  o Double[] prices
  o Boolean[] valid
}

//Updates reputation of verifiers based on number of credentials on network
transaction updateReputation {
  
}

