/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace org.example.empty

abstract participant User identified by username {
 	o String username
  o Double balance
}

participant Verifier extends User {
}

participant EndUser extends User {

}

participant ServiceProvider extends User {

}

//off chain
asset UnverifiedCredential identified by credId{
  o String credId
	o String dataURL
  o String verifier
  o String sender
}

//only see your own keys
asset Key identified by keyId{
  o String keyId
  o String x
  o String y
  o String d optional
  o Boolean public
  o String owner
}

//off chain
asset CredentialForEndUserLocal identified by credId {
  o String credId
  o String attestation
  o Integer[] signatureArray
  o Did verifierDid
  o String owner
}

//off chain
asset CredentialForServiceProvider identified by credId {
  o String credId
  o String attestation
  o Integer[] verifierSignature
  o Did verifierDid
  o Integer[] senderSignature
  o Did senderDid
  o String owner
}

//on chain
asset Did identified by Did{
  o String Did
  o Key publicKey
  o String organization
  o Boolean trusted
}

transaction SendDataToVerifier{
 	o String dataURL
  o String verifier
}

//sign with user key and send
transaction SendCredentialToServiceProvider {
  o String credId
  o String serviceProvider
}

//sign and create verified credential 
transaction VerifierValidate {
	o Boolean verified
  o String credId
  o String attestation
}

transaction CreatekeyPair {

}